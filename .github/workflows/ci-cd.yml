name: CI/CD Spring CO-HOUSING

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [GestionUsuarios]  # Añade todos tus microservicios aquí

    steps:
    # Paso 1: Clonar el repositorio
    - name: Checkout repository
      uses: actions/checkout@v3

    # Paso 2: Configurar JDK (Java 21)
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: 21
        distribution: temurin

    # Paso 3: Cache Maven packages
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    # Paso 4: Build & Test
    - name: Build and Test
      run: |
        cd ${{ matrix.service }}
        ./mvnw clean package

    # Paso 5: Build & Push Docker Image
    - name: Build and Push Docker Image
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        cd ${{ matrix.service }}
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        docker build -t $DOCKER_USERNAME/${{ matrix.service }}:0.0.1-SNAPSHOT .
        docker push $DOCKER_USERNAME/${{ matrix.service }}:0.0.1-SNAPSHOT

    # Paso 6: Subir cobertura a Codecov (opcional)
    - name: Upload to Codecov
      run: bash <(curl -s https://codecov.io/bash)
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
