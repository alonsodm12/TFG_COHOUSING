# .github/workflows/main.yml
name: CI/CD Main

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build JAR
        run: |
          for dir in microservicios/*/; do
            echo "Compilando $dir"
            cd "$dir"
            if [ -f ./mvnw ]; then
                mvn clean package || exit 1
            else
                echo "No se encontrÃ³ ./mvnw en $dir, saltando..."
            fi
            cd - > /dev/null
          done

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: front-end/co-housing
        run: npm install

      - name: Build project
        working-directory: front-end/co-housing
        run: npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.MY_GITHUB_TOKEN }}
          publish_dir: front-end/co-housing/dist

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker images
        run: |
          for dir in microservicios/*/; do
            nombre_micro=$(basename "$dir")
            echo "Procesando microservicio: $nombre_micro"
            cd "$dir"

            # Construir imagen Docker
            docker build --build-arg JAR_FILE=target/${nombre_micro}-0.0.1-SNAPSHOT.jar \
              -t ${{ secrets.DOCKER_USERNAME }}/spring-cohousing-${nombre_micro}:0.0.1-SNAPSHOT .

            # Subir imagen Docker
            docker push ${{ secrets.DOCKER_USERNAME }}/spring-cohousing-${nombre_micro}:0.0.1-SNAPSHOT

            cd - > /dev/null
          done

