name: CI/CD Main

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Compilar micros a JAR (solo Java)
        run: |
          for dir in microservicios/*/; do
            echo "Compilando $dir"
            if [ -f "$dir/demo/pom.xml" ]; then
              cd "$dir/demo"
              mvn clean package || exit 1
              cd - > /dev/null
            else
              echo "Saltando $dir, no es un microservicio Java"
            fi
          done

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: front-end/co-housing
        run: npm install

      - name: Build project
        working-directory: front-end/co-housing
        run: CI=false npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.MY_GITHUB_TOKEN }}
          publish_dir: front-end/co-housing/dist

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

- name: Build and Push Docker images (Java y Python)
  run: |
    for dir in microservicios/*/; do
      nombre_micro=$(basename "$dir")
      nombre_micro_lower=$(echo "$nombre_micro" | tr '[:upper:]' '[:lower:]')
      echo "Procesando microservicio: $nombre_micro"

      # Microservicio Java
      if [ -f "$dir/demo/pom.xml" ]; then
          echo "Java microservice detectado"
          cd "$dir/demo"
          docker build --build-arg JAR_FILE=target/${nombre_micro}-0.0.1-SNAPSHOT.jar \
            -t ${{ secrets.DOCKER_USERNAME }}/spring-cohousing-${nombre_micro_lower}:0.0.1-SNAPSHOT .
          docker push ${{ secrets.DOCKER_USERNAME }}/spring-cohousing-${nombre_micro_lower}:0.0.1-SNAPSHOT
          cd - > /dev/null

      # Microservicio Python
      elif [ -f "$dir/requirements.txt" ]; then
          echo "Python microservice detectado"
          cd "$dir"
          docker build -t ${{ secrets.DOCKER_USERNAME }}/python-cohousing-${nombre_micro_lower}:0.0.1-SNAPSHOT .
          docker push ${{ secrets.DOCKER_USERNAME }}/python-cohousing-${nombre_micro_lower}:0.0.1-SNAPSHOT
          cd - > /dev/null

      else
          echo "No se detect√≥ tipo de microservicio, saltando..."
      fi
    done


